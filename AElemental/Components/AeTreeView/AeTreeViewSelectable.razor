@*
    Copyright (c) 2021 Apption Corporation

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
*@

@namespace AElemental.Components
@typeparam T
@inherits NonGenericTreeView<T>

@if (Roots != null && Roots.Any())
{
    <ul class="ae tree-view">
        @foreach (var item in Roots)
        {
            <TreeItem
                T="T"
                FetchChildren="FetchChildren"
                RenderNode="RenderNode"
                ItemChecked="ItemSelected"
                IsChecked="IsChecked"
                IsIndeterminate="IsIndeterminate"
                Root="item"
                NodeClicked="NodeClicked"
                IsCollapsed="IsCollapsed"
                ToggleCollapsed="ToggleCollapsed"
                IsBold="IsBold"
                NodeIsClickable="NodeIsClickable"/>
        }
    </ul>
}

@code {

    [Parameter]
    public EventCallback<(T, bool)> ItemChecked { get; set; }

    [Parameter]
    public Func<T, bool> IsChecked { get; set; }

    [Parameter]
    public Func<T, bool> IsIndeterminate { get; set; }

    private async Task ItemSelected((T item, bool isSelected) tuple)
    {
        await ItemChecked.InvokeAsync(tuple);
        StateHasChanged();
    }

}