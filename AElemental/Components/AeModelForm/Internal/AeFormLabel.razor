@namespace AElemental.Components
@using System.Reflection
@typeparam T

@if (!string.IsNullOrWhiteSpace(GetLabel()))
{
    <label class="ae ae-form-control-label @RequiredClass" for="@GetID()">
        <AeTypography>@GetLabel()</AeTypography>
    </label>

    @if (!string.IsNullOrEmpty(GetFieldNotes()))
    {
        <label class="ae ae-form-control-label notes @RequiredClass">
            <AeTypography>@GetFieldNotes()</AeTypography>
        </label>
    }
}
else
{
    <div></div>
}

@code {

    [Parameter]
    public PropertyInfo PropertyInfo { get; set; }

    [Parameter]
    public T Instance { get; set; }

    /// <summary>
    ///     There are two major layout options. Standard has line based with label / field and compact has a tabular layout
    ///     with CSS flex.
    /// </summary>
    [Parameter]
    public ModelFormStyle ModelFormStyle { get; set; }

    [Parameter]
    public bool ShowOptional { get; set; } = true;

    private bool IsRequired => AeModelFormTools.IsRequired(PropertyInfo);

    private string RequiredClass => IsRequired ? "ae-label-required" : "ae-label-optional";

    private string GetID()
    {
        return PropertyInfo.Name;
    }

    private string GetLabel()
    {
        return AeModelFormTools.GetLabel(PropertyInfo, LabelForPropertyFunc, false);
    }

    private string GetFieldNotes()
    {
        if (ModelFormContext != null && LabelsOnTop && !string.IsNullOrEmpty(ModelFormContext.GetFieldNote(PropertyInfo)))
        {
            return ModelFormContext.GetFieldNote(PropertyInfo);
        }
        return string.Empty;
    }

    /// <summary>
    ///     Text that will be displayed for the Cancel button. Will be null and hidden by default.
    /// </summary>
    [CascadingParameter(Name = "LabelForPropertyFunc")]
    public Func<string, string> LabelForPropertyFunc { get; set; } = null;

    [CascadingParameter(Name = "ModelFormContext")]
    public ModelFormContext<T> ModelFormContext { get; set; } = null;

    [CascadingParameter(Name = "LabelsOnTop")]
    public bool LabelsOnTop { get; set; } = false;

}