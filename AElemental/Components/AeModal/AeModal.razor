@namespace AElemental.Components
@inject IJSRuntime JSRuntime
@inject UIControlsService UI

<div class="@_classname">
    @if (!_disableBackgroundCancel)
    {
        <div class="ae modal-background" @onclick="CloseModal"></div>
    }
    else
    {
        <div class="ae modal-background"></div>
    }
    @if (_content is null)
    {
        <div class="ae modal-wrapper">
            @if (_title != null)
            {
                <div class="ae modal-title">
                    @_title
                </div>
            }
            <div class="ae modal-body">
                @_body
            </div>
            <div class="ae modal-footer">
                @_footer
            </div>
        </div>
    }
    else
    {
        @_content
    }
</div>

@code {
    private string _classname => $"ae modal {(_content is null && _body is null ? "hidden" : "")} {_inputClass}";
    private string _title;
    private RenderFragment _body;
    private RenderFragment _footer;
    private RenderFragment _content;
    private bool _disableBackgroundCancel;
    private string _inputClass;

    protected override void OnInitialized()
    {
        UI.OnModalChange += Update;
    }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (_show)
    //        await JSRuntime.InvokeVoidAsync("modalHelper.setModalPosition");

    //}

    private async void Update()
    {
        var modal = UI.ModalParameter;
        _content = modal.Content;
        _body = modal.Body;
        RenderFragment defaultFooter = @<AeButton class="blue" @onclick="CloseModal">Close</AeButton>;
        _footer = modal.Footer is null ? defaultFooter : modal.Footer;
        _title = modal.Title;
        _disableBackgroundCancel = modal.DisableBackgroundCancel;
        _inputClass = modal.Class;

        if (_content != null || _body != null)
            await JSRuntime.InvokeVoidAsync("modalHelper.lockBodyScrolling");
        await InvokeAsync(StateHasChanged);
    }

    private void CloseModal()
    {
        UI.ToggleModal();
    }

}