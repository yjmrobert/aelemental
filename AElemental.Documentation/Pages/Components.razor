@page "/component/{Component}"
@page "/typography/{Component}"
@page "/layout/{Component}"

@using AElemental.Documentation.Examples.AeHeading
@using AElemental.Documentation.Examples.AeButton
@using AElemental.Documentation.Examples.AeCheckbox
@using AElemental.Documentation.Examples.AeCode
@using AElemental.Documentation.Examples.AeDropdown
@using AElemental.Documentation.Examples.AeIcon
@using AElemental.Documentation.Examples.AeLink
@using AElemental.Documentation.Examples.AePaper
@using AElemental.Documentation.Examples.AeProgressIndicator
@using AElemental.Documentation.Examples.AeSelect
@using AElemental.Documentation.Examples.AeText
@using AElemental.Documentation.Examples.AeTooltip
@inherits DemoPage


@if (_demos.ContainsKey(Component.ToLowerInvariant()))
{
    @foreach (var demo in _demos[Component.ToLowerInvariant()])
    {
        <DemoSection Path="@($"{demo.FullName?.Replace("AElemental.Documentation.", "./")}.razor")">
            <DynamicComponent Type="demo"/>
        </DemoSection>
    }
}

@code {

    [Parameter]
    public string Component { get; set; }
    

    private readonly Dictionary<string, List<Type>> _demos = new()
    {
        {
            nameof(AeButton).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeButtonBasics),
                typeof(AeButtonSizes),
                typeof(AeButtonDisabled),
                typeof(AeButtonNavigation),
                typeof(AeButtonOnClick)
            }
        },
        {
            nameof(AeCheckbox).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeCheckboxBasics),
                typeof(AeCheckboxIndeterminate),
            }
        },
        {
            nameof(AeCode).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeCodeBasics),
                typeof(AeCodeSingleLine),
                typeof(AeCodeMultiLine),
            }
        },
        {
            nameof(AeDropdown).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeDropdownBasics),
                typeof(AeDropdownDisabled),
            }
        },
        {
            nameof(AeHeading).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeHeadingBasics),
            }
        },
        {
            nameof(AeIcon).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeIconBasics),
                typeof(AeIconColoring),
                typeof(AeIconSizing),
                typeof(AeIconStyling),
            }
        },
        {
            nameof(AePaper).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AePaperBasics),
                typeof(AePaperElevations),
                typeof(AePaperAccentColor),
            }
        },
        {
            nameof(AeProgressIndicator).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeProgressIndicatorBasics),
                typeof(AeProgressIndicatorVertical),
            }
        },
        {
            nameof(AeSelect).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeSelectBasics),
            }
        },
        {
            nameof(AeTooltip).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeTooltipBasics),
                typeof(AeTooltipDefinitions),
                typeof(AeTooltipDirections),
            }
        },
        {
            nameof(AeText).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeTextBasics),
            }
        },
        {
            nameof(AeLink).ToLowerInvariant(),
            new List<Type>
            {
                typeof(AeLinkBasics),
            }
        },
        
    };
}