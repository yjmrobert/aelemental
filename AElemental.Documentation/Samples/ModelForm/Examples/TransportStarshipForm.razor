@*
    Copyright 2020 Apption Corporation
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Title: Model Form with Categories
    Description: This sample uses Category annotations to group and order the different form elements into categories
*@

<AeModelForm
    Model="@_starship"
    SubmitLabel="Save changes"
    OnValidSubmit="HandleValidSubmit"
    CancelLabel="Cancel"
    OnConfigure="OnConfigure"
    OnCancel="CreateStarship"
    IsSectionLocksVisible="true"
    CheckedIcon="ri-check-line"/>

<DebugObject Object="@_starship"/>

@code {

    private TransportStarship _starship;

    private async Task<TransportStarship> CreateStarship()
    {
        return await Task.FromResult(new TransportStarship {ProductionDate = DateTime.Today.AddYears(200)});
    }

    protected override async Task OnInitializedAsync()
    {
        _starship = await CreateStarship();
    }

    private async Task OnConfigure(IModelFormContext context)
    {
    //Use context.GetLockedCategories to get a List<string> of locked categories
        var lockedCategories = context.LockedCategories;
        context.RegisterCategoryNotes("Details", "These are the details of your transport ship");
    }


    private void HandleValidSubmit()
    {
    //do something if form is valid
        StateHasChanged();
    }

}